<?php

namespace FreelancerTools\TimeTrackerBundle\Entity;

use Doctrine\ORM\EntityRepository;
use FreelancerTools\CoreBundle\Entity\EntityRepository as Base;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends Base
{    
    public function getSingleProject($id) {
        $qb = $this->getEntityManager()->createQueryBuilder();   
        
        $qb
                ->select('s,a,p,c')
                ->from('FreelancerToolsTimeTrackerBundle:Project', 'p')
                ->leftJoin('p.customer', 'c')
                ->leftJoin('p.activities', 'a')
                ->leftJoin('a.timeslices', 's')                
                ->andWhere('p.id = :id')
                //->andWhere('a.archived = false')
                ->addOrderBy('a.updatedAt', 'desc')
                ->addOrderBy('s.startedAt', 'desc')
                ->setParameters(array(                    
                    ':id' => $id
                ))
        ;        
        
        try {
            return $qb->getQuery()->getSingleResult();
        } catch (NoResultException $e) {
            return null;
        }                
    }
    public function getProjectsByUser($user) {
        $qb = $this->getEntityManager()->createQueryBuilder();   
        
        $qb
                ->select('p,c')
                ->from('FreelancerToolsTimeTrackerBundle:Project', 'p')
                ->leftJoin('p.customer', 'c')                
                ->andWhere('p.user = :user')
                ->andWhere('p.active = 1')
                ->setParameter(':user', $user)
        ;
        return $qb->getQuery()->execute();        
    }
    
}
